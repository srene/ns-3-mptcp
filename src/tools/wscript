## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

#def configure(conf):
#	conf.env.append_value("LINKFLAGS", ["-lcryptopp"])
def configure(conf):
     conf.env['cryptopp'] = conf.check(mandatory=True, lib='cryptopp', uselib_store='CRYPTO')
def build(bld):
    module = bld.create_ns3_module('tools', ['network', 'stats'])
    module.use.append("CRYPTO")
    module.source = [
        'model/event-garbage-collector.cc',
        'model/gnuplot.cc',
        'model/delay-jitter-estimation.cc',
        'model/stat-watch.cc',
        'model/throughput-watch.cc',  
        'model/sha-digest.cc'     
        ]

    module_test = bld.create_ns3_module_test_library('tools')
    module_test.source = [
        'test/average-test-suite.cc',
        'test/event-garbage-collector-test-suite.cc',
        ]
    
    headers = bld.new_task_gen(features=['ns3header'])
    headers.module = 'tools'
    headers.source = [
        'model/average.h',
        'model/event-garbage-collector.h',
        'model/gnuplot.h',
        'model/delay-jitter-estimation.h',
        'model/stat-watch.h',
        'model/throughput-watch.h', 
        'model/sha-digest.h',
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.add_subdirs('examples')


    bld.ns3_python_bindings()
